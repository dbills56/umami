generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id       String   @id @default(uuid())
  username String   @unique
  password String
  isAdmin  Boolean
  websites Website[]
}

model Website {
  id        String     @id @default(uuid())
  name      String
  domain    String
  shareId   String?    @unique
  userId    String
  user      Account    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime   @default(now())
  resetAt   DateTime?
  session   Session[]
  pageview  Pageview[]
  event     Event[]
}

model Session {
  id        String    @id @default(uuid())
  website   Website   @relation(fields: [websiteId], references: [id], onDelete: Cascade)
  websiteId String
  createdAt DateTime  @default(now())
  hostname  String?
  browser   String?
  os        String?
  device    String?
  screen    String?
  language  String?
  country   String?
  pageviews Pageview[]
  events    Event[]
  @@index([createdAt])
}

model Pageview {
  id        String    @id @default(uuid())
  website   Website   @relation(fields: [websiteId], references: [id], onDelete: Cascade)
  websiteId String
  session   Session   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String
  createdAt DateTime  @default(now())
  url       String
  referrer  String?
  @@index([createdAt])
  @@index([websiteId])
  @@index([sessionId])
}

model Event {
  id         String    @id @default(uuid())
  website    Website   @relation(fields: [websiteId], references: [id], onDelete: Cascade)
  websiteId  String
  session    Session   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId  String
  createdAt  DateTime  @default(now())
  url        String
  eventType  String
  eventValue String?
  @@index([createdAt])
  @@index([websiteId])
  @@index([sessionId])
}
